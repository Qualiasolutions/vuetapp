import 'package:vuet_app/src/features/tasks/domain/entities/task_entity.dart';

abstract class TaskRepository {
  /// Fetches a list of tasks.
  /// 
  /// Might take parameters for filtering, pagination, sorting in a real app.
  Future<List<TaskEntity>> getTasks();

  /// Fetches a single task by its ID.
  /// 
  /// Returns null or throws an error if not found, depending on desired error handling.
  Future<TaskEntity?> getTaskById(String id);

  /// Adds a new task.
  /// 
  /// The [TaskEntity] passed might not have an ID if it's generated by the backend.
  /// The returned [TaskEntity] should represent the created task, potentially with a server-generated ID.
  Future<TaskEntity> addTask(TaskEntity task);

  /// Updates an existing task.
  Future<TaskEntity> updateTask(TaskEntity task);

  /// Deletes a task by its ID.
  Future<void> deleteTask(String id);

  /// Toggles the completion status of a task.
  /// Returns the updated task.
  Future<TaskEntity> toggleTaskCompletion(String taskId, bool isCompleted);
}

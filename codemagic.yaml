workflows:
  ios-testflight:
    name: iOS TestFlight
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - supabase_credentials
        - app_store_credentials
        - ios_credentials
      vars:
        BUNDLE_ID: "ai.vuet.vuet"
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        DEVELOPMENT_TEAM: "36AP5U42Q4"
      flutter: stable
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - ~/.pub-cache
        - ~/Library/Developer/Xcode/DerivedData
        - $CM_BUILD_DIR/ios/Pods
    scripts:
      - name: Set up code signing
        script: |
          echo "Setting up code signing..."
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain initialize
          
          if [ ! -z "$CERTIFICATE_P12" ]; then
            echo "Using certificate from environment variable"
            echo "$CERTIFICATE_P12" | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password "$CERTIFICATE_PASSWORD"
          else
            echo "No certificate found in environment, downloading from App Store Connect"
            app-store-connect download-distribution-certificate --save-private-key
          fi
          
          echo "Available certificates:"
          security find-identity -v -p codesigning
          
          cd ios
          xcode-project use-profiles
          
          if [ ! -z "$PROVISIONING_PROFILE" ]; then
            echo "Using provisioning profile from environment"
            echo "$PROVISIONING_PROFILE" | base64 --decode > /tmp/profile.mobileprovision
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          fi
          
          # Create exportOptions.plist using individual echo commands
          echo "Creating exportOptions.plist..."
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > exportOptions.plist
          echo "<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> exportOptions.plist
        submit_to_testflight: true

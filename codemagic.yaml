workflows:
  ios-testflight:
    name: iOS TestFlight
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - supabase_credentials
        - app_store_credentials
        - ios_credentials
      vars:
        BUNDLE_ID: "ai.vuet.vuet"
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        DEVELOPMENT_TEAM: "36AP5U42Q4"
      flutter: stable
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - ~/.pub-cache
        - ~/Library/Developer/Xcode/DerivedData
        - $CM_BUILD_DIR/ios/Pods
    scripts:
      - name: Set up code signing
        script: |
          echo "Setting up code signing..."
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain initialize
          
          if [ ! -z "$CERTIFICATE_P12" ]; then
            echo "Using certificate from environment variable"
            echo "$CERTIFICATE_P12" | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password "$CERTIFICATE_PASSWORD"
          else
            echo "No certificate found in environment, downloading from App Store Connect"
            app-store-connect download-distribution-certificate --save-private-key
          fi
          
          echo "Available certificates:"
          security find-identity -v -p codesigning
          
          cd ios
          xcode-project use-profiles
          
          if [ ! -z "$PROVISIONING_PROFILE" ]; then
            echo "Using provisioning profile from environment"
            echo "$PROVISIONING_PROFILE" | base64 --decode > /tmp/profile.mobileprovision
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          fi
          
          # Create exportOptions.plist using individual echo commands
          echo "Creating exportOptions.plist..."
          echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > exportOptions.plist
          echo "<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> exportOptions.plist
          echo "<plist version=\"1.0\">" >> exportOptions.plist
          echo "<dict>" >> exportOptions.plist
          echo "    <key>method</key>" >> exportOptions.plist
          echo "    <string>app-store</string>" >> exportOptions.plist
          echo "    <key>teamID</key>" >> exportOptions.plist
          echo "    <string>36AP5U42Q4</string>" >> exportOptions.plist
          echo "    <key>uploadBitcode</key>" >> exportOptions.plist
          echo "    <false/>" >> exportOptions.plist
          echo "    <key>uploadSymbols</key>" >> exportOptions.plist
          echo "    <true/>" >> exportOptions.plist
          echo "    <key>signingStyle</key>" >> exportOptions.plist
          echo "    <string>manual</string>" >> exportOptions.plist
          echo "    <key>provisioningProfiles</key>" >> exportOptions.plist
          echo "    <dict>" >> exportOptions.plist
          echo "        <key>ai.vuet.vuet</key>" >> exportOptions.plist
          echo "        <string>Vuet ios_app_store 1748898756</string>" >> exportOptions.plist
          echo "    </dict>" >> exportOptions.plist
          echo "</dict>" >> exportOptions.plist
          echo "</plist>" >> exportOptions.plist
          
          echo "Verifying exportOptions.plist content:"
          cat exportOptions.plist
      - name: Get Flutter packages
        script: flutter pub get
      - name: Generate code
        script: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install --repo-update
      - name: Setup environment variables for the app
        script: |
          if [ -f ".env.production" ]; then
            cp .env.production .env
            echo "Copied .env.production to .env"
          elif [ -f ".env.development" ]; then
            cp .env.development .env
            echo "Warning: Using .env.development"
          else
            echo "Error: No .env file found"
            exit 1
          fi
      - name: Set iOS build number
        script: |
          cd ios
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$BUNDLE_ID" || echo "0")
          NEW_BUILD_NUMBER=$((LATEST_BUILD_NUMBER + 1))
          agvtool new-version -all $NEW_BUILD_NUMBER
          echo "Set iOS build number to $NEW_BUILD_NUMBER"
      - name: Flutter build iOS
        script: |
          cd ios
          
          echo "Updating Runner project settings..."
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier ai.vuet.vuet" Runner/Info.plist || true
          
          # Update project settings
          plutil -replace "objects.PBXProject.1.attributes.TargetAttributes.97C146ED1CF9000F007C117D.ProvisioningStyle" -string "Manual" Runner.xcodeproj/project.pbxproj
          plutil -replace "objects.PBXProject.1.attributes.TargetAttributes.97C146ED1CF9000F007C117D.DevelopmentTeam" -string "36AP5U42Q4" Runner.xcodeproj/project.pbxproj
          
          echo "Building Flutter bundle..."
          flutter build ios --release --no-codesign
          
          echo "Creating archive..."
          rm -rf build/Runner.xcarchive
          mkdir -p build
          
          xcodebuild clean archive \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/Runner.xcarchive \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=36AP5U42Q4 \
            PROVISIONING_PROFILE_SPECIFIER="Vuet ios_app_store 1748898756" \
            PRODUCT_BUNDLE_IDENTIFIER="ai.vuet.vuet"
          
          echo "Creating IPA..."
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build/ios/ipa/
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $CM_BUILD_DIR/flutter_drive.log
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true

workflows:
  ios-testflight:
    name: iOS TestFlight
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - supabase_credentials
        - app_store_credentials
        - ios_credentials # Contains certificate, profile, and passwords
      vars:
        BUNDLE_ID: "ai.vuet.vuet"
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        DEVELOPMENT_TEAM: "36AP5U42Q4" # Your team ID from the provisioning profile
      flutter: stable
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - ~/.pub-cache
        - ~/Library/Developer/Xcode/DerivedData
        - $CM_BUILD_DIR/ios/Pods
    scripts:
      - name: Set up code signing
        script: |
          # Debug info
          echo "Setting up code signing..."
          
          # Use app-store-connect to fetch the profiles directly from Apple
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          
          # Set up the keychain and add the certificate
          keychain initialize
          
          # If we have a certificate from environment, use it
          if [ ! -z "$CERTIFICATE" ]; then
            echo "$CERTIFICATE" | base64 --decode > /tmp/certificate.p12
            keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password "$CERTIFICATE_PASSWORD"
          fi
          
          # Set up code signing settings in the Xcode project
          cd ios
          xcode-project use-profiles
          
          # List available certificates to verify setup
          security find-identity -v -p codesigning
          
          # Create exportOptions.plist file dynamically
          cat > exportOptions.plist << 'EOL'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>method</key>
    <string>app-store</string>
    <key>teamID</key>
    <string>36AP5U42Q4</string>
    <key>uploadBitcode</key>
    <false/>
    <key>uploadSymbols</key>
    <true/>
    <key>signingStyle</key>
    <string>manual</string>
    <key>provisioningProfiles</key>
    <dict>
        <key>ai.vuet.vuet</key>
        <string>Vuet ios_app_store 1748898756</string>
    </dict>
</dict>
</plist>
EOL
      - name: Get Flutter packages
        script: flutter pub get
      - name: Generate code
        script: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install --repo-update
      - name: Setup environment variables for the app
        script: |
          echo "Setting up environment variables for the app..."
          if [ -f ".env.production" ]; then
            cp .env.production .env
            echo "Copied .env.production to .env"
          elif [ -f ".env.development" ]; then
            cp .env.development .env
            echo "Warning: .env.production not found. Copied .env.development to .env for branch $CM_BRANCH"
          else
            echo "Error: Neither .env.production nor .env.development found at the repository root."
            echo "Please ensure one of these files exists in your vuetapp.git repository."
            exit 1
          fi
      - name: Set iOS build number
        script: |
          cd ios
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$BUNDLE_ID" || echo "0")
          NEW_BUILD_NUMBER=$((LATEST_BUILD_NUMBER + 1))
          agvtool new-version -all $NEW_BUILD_NUMBER
          echo "Set iOS build number to $NEW_BUILD_NUMBER"
      - name: Prepare Flutter for build
        script: |
          # Make sure Flutter uses the provisioning profile we set up
          echo "Setting up Flutter for release build..."
          flutter config --no-analytics
          flutter doctor -v
      - name: Flutter build iOS
        script: |
          # Build with automatic code signing using the profiles we've set up
          cd ios
          # Update the project settings with development team
          /usr/libexec/PlistBuddy -c "Set :buildSettings:DEVELOPMENT_TEAM 36AP5U42Q4" "Runner.xcodeproj/project.pbxproj"
          
          # Build the archive with explicit team ID
          /usr/bin/xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="Vuet ios_app_store 1748898756" \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            DEVELOPMENT_TEAM=36AP5U42Q4 \
            clean archive -archivePath build/Runner.xcarchive
          
          # Create the IPA from the archive
          /usr/bin/xcodebuild -exportArchive -archivePath build/Runner.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build/ios/ipa/
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $CM_BUILD_DIR/flutter_drive.log
    publishing:
      app_store_connect:
        api_key: $APP_STORE_P8_CONTENT
        key_id: $APPLE_KEY_ID
        issuer_id: $APPLE_ISSUER_ID
        submit_to_testflight: true
